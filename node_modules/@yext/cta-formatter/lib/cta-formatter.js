(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.CtaFormatter = factory());
}(this, (function () { 'use strict';

  /**
   * Provides formatting for a Yext CTA field type
   */
  var YextCtaFormatter = /*#__PURE__*/function () {
    function YextCtaFormatter() {}
    /**
     * Takes a yext CTA object and returns a formatted CTA link string, if possible
     *
     * @param {Object} cta A Yext CTA field type
     * @return {string} The formatted string if valid CTA object, emptry string otherwise
     */


    var _proto = YextCtaFormatter.prototype;

    _proto.generateCTAFieldTypeLink = function generateCTAFieldTypeLink(cta) {
      if (!cta) {
        console.error('No CTA object passed');
        return '';
      }

      if (!cta.linkType) {
        console.error('CTA doesn\'t have a linktype');
        return '';
      }

      if (!cta.link) {
        console.error('CTA doesn\'t have a link');
        return '';
      }

      switch (cta.linkType) {
        case 'Phone':
          return "tel:" + cta.link;

        case 'Email':
          return "mailto:" + cta.link;

        default:
          return "" + cta.link;
      }
    };

    return YextCtaFormatter;
  }();

  var CtaFormatter = new YextCtaFormatter();

  return CtaFormatter;

})));
