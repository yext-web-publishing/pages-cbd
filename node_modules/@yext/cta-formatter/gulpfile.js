const { series, src, dest } = require('gulp');

const rollup = require('gulp-rollup-lightweight');
const resolve = require('rollup-plugin-node-resolve');
const commonjs = require('rollup-plugin-commonjs');
const babel = require('rollup-plugin-babel');

const source = require('vinyl-source-stream');
const rename = require('gulp-rename');

const uglify = require('gulp-uglify-es').default;

function bundle () {
  return rollup({
    input: './src/index.js',
    output: {
      format: 'umd',
      name: 'CtaFormatter',
      exports: 'default',
    },
    plugins: [
      resolve(),
      commonjs({
        include: './node_modules/**'
      }),
      babel({
        runtimeHelpers: true,
        babelrc: false,
        exclude: 'node_modules/**',
        presets: [
          [
            '@babel/preset-env',
            {
              'loose': true,
              'modules': false
            }
          ]
        ],
        plugins: [
          ['@babel/plugin-transform-runtime', {
            'corejs': 3
          }],
        ]
      })
    ]
  })
    .pipe(source('cta-formatter.js'))
    .pipe(dest('lib'));
}

function minifyJS () {
  return src('./lib/cta-formatter.js')
    .pipe(rename('cta-formatter.min.js'))
    .pipe(uglify())
    .pipe(dest('lib'));
}

exports.default = series(bundle, minifyJS);
